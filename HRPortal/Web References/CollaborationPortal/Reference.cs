//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HRPortal.CollaborationPortal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CollaborationPortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal")]
    public partial class CollaborationPortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback PortalResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCollabApplicationHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnForeignDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertCoreTextJournalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertSourceOfFundsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertAgentFacilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertGovernmentComplianceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStaffMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnProgrammeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddDocumentsLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFacilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveGovernanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUniversityOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovedocOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditPhysicalLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditStaffProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditGovernanceComplianceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnConfirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertEquipmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateApplicationReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUserHelpEmaiRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLicenceVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertRenewalacilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStudentStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertUniversityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitAppealReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateLicenseReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateProformaReportOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CollaborationPortal() {
            this.Url = global::HRPortal.Properties.Settings.Default.HRPortal_CollaborationPortal_CollaborationPortal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnRegistrationCompletedEventHandler FnRegistrationCompleted;
        
        /// <remarks/>
        public event FnResetPasswordCompletedEventHandler FnResetPasswordCompleted;
        
        /// <remarks/>
        public event PortalResetPasswordCompletedEventHandler PortalResetPasswordCompleted;
        
        /// <remarks/>
        public event FnCollabApplicationHeaderCompletedEventHandler FnCollabApplicationHeaderCompleted;
        
        /// <remarks/>
        public event FnForeignDetailsCompletedEventHandler FnForeignDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertCoreTextJournalsCompletedEventHandler FnInsertCoreTextJournalsCompleted;
        
        /// <remarks/>
        public event FnInsertSourceOfFundsCompletedEventHandler FnInsertSourceOfFundsCompleted;
        
        /// <remarks/>
        public event FnInsertAgentFacilitiesCompletedEventHandler FnInsertAgentFacilitiesCompleted;
        
        /// <remarks/>
        public event FnInsertGovernmentComplianceCompletedEventHandler FnInsertGovernmentComplianceCompleted;
        
        /// <remarks/>
        public event FnInsertStaffMemberCompletedEventHandler FnInsertStaffMemberCompleted;
        
        /// <remarks/>
        public event FnProgrammeDetailsCompletedEventHandler FnProgrammeDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertResponseCompletedEventHandler FnInsertResponseCompleted;
        
        /// <remarks/>
        public event FnAddDocumentsLinksCompletedEventHandler FnAddDocumentsLinksCompleted;
        
        /// <remarks/>
        public event FnSubmitApplicationCompletedEventHandler FnSubmitApplicationCompleted;
        
        /// <remarks/>
        public event RemoveItemCompletedEventHandler RemoveItemCompleted;
        
        /// <remarks/>
        public event RemoveFacilityCompletedEventHandler RemoveFacilityCompleted;
        
        /// <remarks/>
        public event RemoveGovernanceCompletedEventHandler RemoveGovernanceCompleted;
        
        /// <remarks/>
        public event RemoveStaffCompletedEventHandler RemoveStaffCompleted;
        
        /// <remarks/>
        public event RemoveActivityCompletedEventHandler RemoveActivityCompleted;
        
        /// <remarks/>
        public event RemoveUniversityCompletedEventHandler RemoveUniversityCompleted;
        
        /// <remarks/>
        public event RemovedocCompletedEventHandler RemovedocCompleted;
        
        /// <remarks/>
        public event EditPhysicalLocationCompletedEventHandler EditPhysicalLocationCompleted;
        
        /// <remarks/>
        public event EditStaffProfileCompletedEventHandler EditStaffProfileCompleted;
        
        /// <remarks/>
        public event EditGovernanceComplianceCompletedEventHandler EditGovernanceComplianceCompleted;
        
        /// <remarks/>
        public event FnConfirmPaymentCompletedEventHandler FnConfirmPaymentCompleted;
        
        /// <remarks/>
        public event FnInsertEquipmentsCompletedEventHandler FnInsertEquipmentsCompleted;
        
        /// <remarks/>
        public event FnGenerateApplicationReportCompletedEventHandler FnGenerateApplicationReportCompleted;
        
        /// <remarks/>
        public event FnUserHelpEmaiRequestCompletedEventHandler FnUserHelpEmaiRequestCompleted;
        
        /// <remarks/>
        public event FnLicenceVoucherCompletedEventHandler FnLicenceVoucherCompleted;
        
        /// <remarks/>
        public event FnInsertRenewalacilitiesCompletedEventHandler FnInsertRenewalacilitiesCompleted;
        
        /// <remarks/>
        public event FnInsertStudentStatisticsCompletedEventHandler FnInsertStudentStatisticsCompleted;
        
        /// <remarks/>
        public event FnInsertUniversityCompletedEventHandler FnInsertUniversityCompleted;
        
        /// <remarks/>
        public event FnSubmitAppealReasonCompletedEventHandler FnSubmitAppealReasonCompleted;
        
        /// <remarks/>
        public event FnGenerateLicenseReportCompletedEventHandler FnGenerateLicenseReportCompleted;
        
        /// <remarks/>
        public event FnGenerateProformaReportCompletedEventHandler FnGenerateProformaReportCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnRegistration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRegistration(string tAgentName, string tphoneNumber, string tResidentialsAddress, string tpostalAddress, string tAlternativeNumber, string twebsite, string temailAddress, string tcontactName, string tCity, string tpostaLAddressPoBox, string contactPhone, string contactEmail) {
            object[] results = this.Invoke("FnRegistration", new object[] {
                        tAgentName,
                        tphoneNumber,
                        tResidentialsAddress,
                        tpostalAddress,
                        tAlternativeNumber,
                        twebsite,
                        temailAddress,
                        tcontactName,
                        tCity,
                        tpostaLAddressPoBox,
                        contactPhone,
                        contactEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegistrationAsync(string tAgentName, string tphoneNumber, string tResidentialsAddress, string tpostalAddress, string tAlternativeNumber, string twebsite, string temailAddress, string tcontactName, string tCity, string tpostaLAddressPoBox, string contactPhone, string contactEmail) {
            this.FnRegistrationAsync(tAgentName, tphoneNumber, tResidentialsAddress, tpostalAddress, tAlternativeNumber, twebsite, temailAddress, tcontactName, tCity, tpostaLAddressPoBox, contactPhone, contactEmail, null);
        }
        
        /// <remarks/>
        public void FnRegistrationAsync(string tAgentName, string tphoneNumber, string tResidentialsAddress, string tpostalAddress, string tAlternativeNumber, string twebsite, string temailAddress, string tcontactName, string tCity, string tpostaLAddressPoBox, string contactPhone, string contactEmail, object userState) {
            if ((this.FnRegistrationOperationCompleted == null)) {
                this.FnRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnRegistration", new object[] {
                        tAgentName,
                        tphoneNumber,
                        tResidentialsAddress,
                        tpostalAddress,
                        tAlternativeNumber,
                        twebsite,
                        temailAddress,
                        tcontactName,
                        tCity,
                        tpostaLAddressPoBox,
                        contactPhone,
                        contactEmail}, this.FnRegistrationOperationCompleted, userState);
        }
        
        private void OnFnRegistrationOperationCompleted(object arg) {
            if ((this.FnRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegistrationCompleted(this, new FnRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnResetPassword(string emailaddress, string originalpass, string newpass, string confirmpass) {
            object[] results = this.Invoke("FnResetPassword", new object[] {
                        emailaddress,
                        originalpass,
                        newpass,
                        confirmpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress, string originalpass, string newpass, string confirmpass) {
            this.FnResetPasswordAsync(emailaddress, originalpass, newpass, confirmpass, null);
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress, string originalpass, string newpass, string confirmpass, object userState) {
            if ((this.FnResetPasswordOperationCompleted == null)) {
                this.FnResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("FnResetPassword", new object[] {
                        emailaddress,
                        originalpass,
                        newpass,
                        confirmpass}, this.FnResetPasswordOperationCompleted, userState);
        }
        
        private void OnFnResetPasswordOperationCompleted(object arg) {
            if ((this.FnResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnResetPasswordCompleted(this, new FnResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:PortalResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="PortalResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PortalResetPassword(string emailaddress) {
            object[] results = this.Invoke("PortalResetPassword", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PortalResetPasswordAsync(string emailaddress) {
            this.PortalResetPasswordAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void PortalResetPasswordAsync(string emailaddress, object userState) {
            if ((this.PortalResetPasswordOperationCompleted == null)) {
                this.PortalResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPortalResetPasswordOperationCompleted);
            }
            this.InvokeAsync("PortalResetPassword", new object[] {
                        emailaddress}, this.PortalResetPasswordOperationCompleted, userState);
        }
        
        private void OnPortalResetPasswordOperationCompleted(object arg) {
            if ((this.PortalResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PortalResetPasswordCompleted(this, new PortalResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnCollabApplicationHe" +
            "ader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnCollabApplicationHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCollabApplicationHeader(
                    string name, 
                    string applicationNo, 
                    string physicalLocation, 
                    string postCode, 
                    string city, 
                    string postalAddress, 
                    string telephoneNumber, 
                    string emailAddress, 
                    string website, 
                    int acredditationStatus, 
                    string accreditingBody, 
                    string researchfocus, 
                    string institutionNo, 
                    decimal recurrentCash, 
                    decimal capitalCash, 
                    int institutionType) {
            object[] results = this.Invoke("FnCollabApplicationHeader", new object[] {
                        name,
                        applicationNo,
                        physicalLocation,
                        postCode,
                        city,
                        postalAddress,
                        telephoneNumber,
                        emailAddress,
                        website,
                        acredditationStatus,
                        accreditingBody,
                        researchfocus,
                        institutionNo,
                        recurrentCash,
                        capitalCash,
                        institutionType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCollabApplicationHeaderAsync(
                    string name, 
                    string applicationNo, 
                    string physicalLocation, 
                    string postCode, 
                    string city, 
                    string postalAddress, 
                    string telephoneNumber, 
                    string emailAddress, 
                    string website, 
                    int acredditationStatus, 
                    string accreditingBody, 
                    string researchfocus, 
                    string institutionNo, 
                    decimal recurrentCash, 
                    decimal capitalCash, 
                    int institutionType) {
            this.FnCollabApplicationHeaderAsync(name, applicationNo, physicalLocation, postCode, city, postalAddress, telephoneNumber, emailAddress, website, acredditationStatus, accreditingBody, researchfocus, institutionNo, recurrentCash, capitalCash, institutionType, null);
        }
        
        /// <remarks/>
        public void FnCollabApplicationHeaderAsync(
                    string name, 
                    string applicationNo, 
                    string physicalLocation, 
                    string postCode, 
                    string city, 
                    string postalAddress, 
                    string telephoneNumber, 
                    string emailAddress, 
                    string website, 
                    int acredditationStatus, 
                    string accreditingBody, 
                    string researchfocus, 
                    string institutionNo, 
                    decimal recurrentCash, 
                    decimal capitalCash, 
                    int institutionType, 
                    object userState) {
            if ((this.FnCollabApplicationHeaderOperationCompleted == null)) {
                this.FnCollabApplicationHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCollabApplicationHeaderOperationCompleted);
            }
            this.InvokeAsync("FnCollabApplicationHeader", new object[] {
                        name,
                        applicationNo,
                        physicalLocation,
                        postCode,
                        city,
                        postalAddress,
                        telephoneNumber,
                        emailAddress,
                        website,
                        acredditationStatus,
                        accreditingBody,
                        researchfocus,
                        institutionNo,
                        recurrentCash,
                        capitalCash,
                        institutionType}, this.FnCollabApplicationHeaderOperationCompleted, userState);
        }
        
        private void OnFnCollabApplicationHeaderOperationCompleted(object arg) {
            if ((this.FnCollabApplicationHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCollabApplicationHeaderCompleted(this, new FnCollabApplicationHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnForeignDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnForeignDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnForeignDetails(string name, string applicationNo, string physicalLocation, string country, string postalAddress, string telephoneNumber, string emailAddress, string website, int acredditationStatus, string accreditingBody, string academicfocus, string researchfocus) {
            object[] results = this.Invoke("FnForeignDetails", new object[] {
                        name,
                        applicationNo,
                        physicalLocation,
                        country,
                        postalAddress,
                        telephoneNumber,
                        emailAddress,
                        website,
                        acredditationStatus,
                        accreditingBody,
                        academicfocus,
                        researchfocus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnForeignDetailsAsync(string name, string applicationNo, string physicalLocation, string country, string postalAddress, string telephoneNumber, string emailAddress, string website, int acredditationStatus, string accreditingBody, string academicfocus, string researchfocus) {
            this.FnForeignDetailsAsync(name, applicationNo, physicalLocation, country, postalAddress, telephoneNumber, emailAddress, website, acredditationStatus, accreditingBody, academicfocus, researchfocus, null);
        }
        
        /// <remarks/>
        public void FnForeignDetailsAsync(string name, string applicationNo, string physicalLocation, string country, string postalAddress, string telephoneNumber, string emailAddress, string website, int acredditationStatus, string accreditingBody, string academicfocus, string researchfocus, object userState) {
            if ((this.FnForeignDetailsOperationCompleted == null)) {
                this.FnForeignDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnForeignDetailsOperationCompleted);
            }
            this.InvokeAsync("FnForeignDetails", new object[] {
                        name,
                        applicationNo,
                        physicalLocation,
                        country,
                        postalAddress,
                        telephoneNumber,
                        emailAddress,
                        website,
                        acredditationStatus,
                        accreditingBody,
                        academicfocus,
                        researchfocus}, this.FnForeignDetailsOperationCompleted, userState);
        }
        
        private void OnFnForeignDetailsOperationCompleted(object arg) {
            if ((this.FnForeignDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnForeignDetailsCompleted(this, new FnForeignDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnInsertCoreTextJourn" +
            "als", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnInsertCoreTextJournals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertCoreTextJournals(string tapplicationNo, string subjectArea, int titles, string volumes, int journals, string remarks) {
            object[] results = this.Invoke("FnInsertCoreTextJournals", new object[] {
                        tapplicationNo,
                        subjectArea,
                        titles,
                        volumes,
                        journals,
                        remarks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertCoreTextJournalsAsync(string tapplicationNo, string subjectArea, int titles, string volumes, int journals, string remarks) {
            this.FnInsertCoreTextJournalsAsync(tapplicationNo, subjectArea, titles, volumes, journals, remarks, null);
        }
        
        /// <remarks/>
        public void FnInsertCoreTextJournalsAsync(string tapplicationNo, string subjectArea, int titles, string volumes, int journals, string remarks, object userState) {
            if ((this.FnInsertCoreTextJournalsOperationCompleted == null)) {
                this.FnInsertCoreTextJournalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertCoreTextJournalsOperationCompleted);
            }
            this.InvokeAsync("FnInsertCoreTextJournals", new object[] {
                        tapplicationNo,
                        subjectArea,
                        titles,
                        volumes,
                        journals,
                        remarks}, this.FnInsertCoreTextJournalsOperationCompleted, userState);
        }
        
        private void OnFnInsertCoreTextJournalsOperationCompleted(object arg) {
            if ((this.FnInsertCoreTextJournalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertCoreTextJournalsCompleted(this, new FnInsertCoreTextJournalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnInsertSourceOfFunds" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnInsertSourceOfFunds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertSourceOfFunds(string tapplicationNo, string description) {
            object[] results = this.Invoke("FnInsertSourceOfFunds", new object[] {
                        tapplicationNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertSourceOfFundsAsync(string tapplicationNo, string description) {
            this.FnInsertSourceOfFundsAsync(tapplicationNo, description, null);
        }
        
        /// <remarks/>
        public void FnInsertSourceOfFundsAsync(string tapplicationNo, string description, object userState) {
            if ((this.FnInsertSourceOfFundsOperationCompleted == null)) {
                this.FnInsertSourceOfFundsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertSourceOfFundsOperationCompleted);
            }
            this.InvokeAsync("FnInsertSourceOfFunds", new object[] {
                        tapplicationNo,
                        description}, this.FnInsertSourceOfFundsOperationCompleted, userState);
        }
        
        private void OnFnInsertSourceOfFundsOperationCompleted(object arg) {
            if ((this.FnInsertSourceOfFundsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertSourceOfFundsCompleted(this, new FnInsertSourceOfFundsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnInsertAgentFaciliti" +
            "es", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnInsertAgentFacilities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertAgentFacilities(string tapplicationNo, string tFacilityCode, int tquantity, string tcapacity, int specificdpt, int shared) {
            object[] results = this.Invoke("FnInsertAgentFacilities", new object[] {
                        tapplicationNo,
                        tFacilityCode,
                        tquantity,
                        tcapacity,
                        specificdpt,
                        shared});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertAgentFacilitiesAsync(string tapplicationNo, string tFacilityCode, int tquantity, string tcapacity, int specificdpt, int shared) {
            this.FnInsertAgentFacilitiesAsync(tapplicationNo, tFacilityCode, tquantity, tcapacity, specificdpt, shared, null);
        }
        
        /// <remarks/>
        public void FnInsertAgentFacilitiesAsync(string tapplicationNo, string tFacilityCode, int tquantity, string tcapacity, int specificdpt, int shared, object userState) {
            if ((this.FnInsertAgentFacilitiesOperationCompleted == null)) {
                this.FnInsertAgentFacilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertAgentFacilitiesOperationCompleted);
            }
            this.InvokeAsync("FnInsertAgentFacilities", new object[] {
                        tapplicationNo,
                        tFacilityCode,
                        tquantity,
                        tcapacity,
                        specificdpt,
                        shared}, this.FnInsertAgentFacilitiesOperationCompleted, userState);
        }
        
        private void OnFnInsertAgentFacilitiesOperationCompleted(object arg) {
            if ((this.FnInsertAgentFacilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertAgentFacilitiesCompleted(this, new FnInsertAgentFacilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnInsertGovernmentCom" +
            "pliance", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnInsertGovernmentCompliance_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertGovernmentCompliance(string tapplicationNo, string tCertificateCode, string tcertificateDescription, string tcertificateNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfIssue, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfExpiry, string authorityIssuingCertificate) {
            object[] results = this.Invoke("FnInsertGovernmentCompliance", new object[] {
                        tapplicationNo,
                        tCertificateCode,
                        tcertificateDescription,
                        tcertificateNo,
                        dateOfIssue,
                        dateOfExpiry,
                        authorityIssuingCertificate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertGovernmentComplianceAsync(string tapplicationNo, string tCertificateCode, string tcertificateDescription, string tcertificateNo, System.DateTime dateOfIssue, System.DateTime dateOfExpiry, string authorityIssuingCertificate) {
            this.FnInsertGovernmentComplianceAsync(tapplicationNo, tCertificateCode, tcertificateDescription, tcertificateNo, dateOfIssue, dateOfExpiry, authorityIssuingCertificate, null);
        }
        
        /// <remarks/>
        public void FnInsertGovernmentComplianceAsync(string tapplicationNo, string tCertificateCode, string tcertificateDescription, string tcertificateNo, System.DateTime dateOfIssue, System.DateTime dateOfExpiry, string authorityIssuingCertificate, object userState) {
            if ((this.FnInsertGovernmentComplianceOperationCompleted == null)) {
                this.FnInsertGovernmentComplianceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertGovernmentComplianceOperationCompleted);
            }
            this.InvokeAsync("FnInsertGovernmentCompliance", new object[] {
                        tapplicationNo,
                        tCertificateCode,
                        tcertificateDescription,
                        tcertificateNo,
                        dateOfIssue,
                        dateOfExpiry,
                        authorityIssuingCertificate}, this.FnInsertGovernmentComplianceOperationCompleted, userState);
        }
        
        private void OnFnInsertGovernmentComplianceOperationCompleted(object arg) {
            if ((this.FnInsertGovernmentComplianceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertGovernmentComplianceCompleted(this, new FnInsertGovernmentComplianceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnInsertStaffMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnInsertStaffMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStaffMember(string tapplicationNo, string tstaffName, int tGender, string rank, string academicQualification, string qualificationText, string areaSpecialization, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expiryDate, int experience, string remarks, int tTerms, string institution) {
            object[] results = this.Invoke("FnInsertStaffMember", new object[] {
                        tapplicationNo,
                        tstaffName,
                        tGender,
                        rank,
                        academicQualification,
                        qualificationText,
                        areaSpecialization,
                        expiryDate,
                        experience,
                        remarks,
                        tTerms,
                        institution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStaffMemberAsync(string tapplicationNo, string tstaffName, int tGender, string rank, string academicQualification, string qualificationText, string areaSpecialization, System.DateTime expiryDate, int experience, string remarks, int tTerms, string institution) {
            this.FnInsertStaffMemberAsync(tapplicationNo, tstaffName, tGender, rank, academicQualification, qualificationText, areaSpecialization, expiryDate, experience, remarks, tTerms, institution, null);
        }
        
        /// <remarks/>
        public void FnInsertStaffMemberAsync(string tapplicationNo, string tstaffName, int tGender, string rank, string academicQualification, string qualificationText, string areaSpecialization, System.DateTime expiryDate, int experience, string remarks, int tTerms, string institution, object userState) {
            if ((this.FnInsertStaffMemberOperationCompleted == null)) {
                this.FnInsertStaffMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStaffMemberOperationCompleted);
            }
            this.InvokeAsync("FnInsertStaffMember", new object[] {
                        tapplicationNo,
                        tstaffName,
                        tGender,
                        rank,
                        academicQualification,
                        qualificationText,
                        areaSpecialization,
                        expiryDate,
                        experience,
                        remarks,
                        tTerms,
                        institution}, this.FnInsertStaffMemberOperationCompleted, userState);
        }
        
        private void OnFnInsertStaffMemberOperationCompleted(object arg) {
            if ((this.FnInsertStaffMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStaffMemberCompleted(this, new FnInsertStaffMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnProgrammeDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnProgrammeDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnProgrammeDetails(string tapplicationNo, string qualification, string programmeName, string studentRation, string staffload, string principalAcademic, string explanation, string benefit) {
            object[] results = this.Invoke("FnProgrammeDetails", new object[] {
                        tapplicationNo,
                        qualification,
                        programmeName,
                        studentRation,
                        staffload,
                        principalAcademic,
                        explanation,
                        benefit});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnProgrammeDetailsAsync(string tapplicationNo, string qualification, string programmeName, string studentRation, string staffload, string principalAcademic, string explanation, string benefit) {
            this.FnProgrammeDetailsAsync(tapplicationNo, qualification, programmeName, studentRation, staffload, principalAcademic, explanation, benefit, null);
        }
        
        /// <remarks/>
        public void FnProgrammeDetailsAsync(string tapplicationNo, string qualification, string programmeName, string studentRation, string staffload, string principalAcademic, string explanation, string benefit, object userState) {
            if ((this.FnProgrammeDetailsOperationCompleted == null)) {
                this.FnProgrammeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnProgrammeDetailsOperationCompleted);
            }
            this.InvokeAsync("FnProgrammeDetails", new object[] {
                        tapplicationNo,
                        qualification,
                        programmeName,
                        studentRation,
                        staffload,
                        principalAcademic,
                        explanation,
                        benefit}, this.FnProgrammeDetailsOperationCompleted, userState);
        }
        
        private void OnFnProgrammeDetailsOperationCompleted(object arg) {
            if ((this.FnProgrammeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnProgrammeDetailsCompleted(this, new FnProgrammeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnInsertResponse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnInsertResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertResponse(string tapplicationNo, string tQuestionCategory, string tquestionCode, string tresponse) {
            object[] results = this.Invoke("FnInsertResponse", new object[] {
                        tapplicationNo,
                        tQuestionCategory,
                        tquestionCode,
                        tresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertResponseAsync(string tapplicationNo, string tQuestionCategory, string tquestionCode, string tresponse) {
            this.FnInsertResponseAsync(tapplicationNo, tQuestionCategory, tquestionCode, tresponse, null);
        }
        
        /// <remarks/>
        public void FnInsertResponseAsync(string tapplicationNo, string tQuestionCategory, string tquestionCode, string tresponse, object userState) {
            if ((this.FnInsertResponseOperationCompleted == null)) {
                this.FnInsertResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertResponseOperationCompleted);
            }
            this.InvokeAsync("FnInsertResponse", new object[] {
                        tapplicationNo,
                        tQuestionCategory,
                        tquestionCode,
                        tresponse}, this.FnInsertResponseOperationCompleted, userState);
        }
        
        private void OnFnInsertResponseOperationCompleted(object arg) {
            if ((this.FnInsertResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertResponseCompleted(this, new FnInsertResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnAddDocumentsLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnAddDocumentsLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddDocumentsLinks(string tapplicationNo, string documentCode) {
            object[] results = this.Invoke("FnAddDocumentsLinks", new object[] {
                        tapplicationNo,
                        documentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddDocumentsLinksAsync(string tapplicationNo, string documentCode) {
            this.FnAddDocumentsLinksAsync(tapplicationNo, documentCode, null);
        }
        
        /// <remarks/>
        public void FnAddDocumentsLinksAsync(string tapplicationNo, string documentCode, object userState) {
            if ((this.FnAddDocumentsLinksOperationCompleted == null)) {
                this.FnAddDocumentsLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddDocumentsLinksOperationCompleted);
            }
            this.InvokeAsync("FnAddDocumentsLinks", new object[] {
                        tapplicationNo,
                        documentCode}, this.FnAddDocumentsLinksOperationCompleted, userState);
        }
        
        private void OnFnAddDocumentsLinksOperationCompleted(object arg) {
            if ((this.FnAddDocumentsLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddDocumentsLinksCompleted(this, new FnAddDocumentsLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnSubmitApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnSubmitApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitApplication(string applicationNo) {
            object[] results = this.Invoke("FnSubmitApplication", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitApplicationAsync(string applicationNo) {
            this.FnSubmitApplicationAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitApplicationAsync(string applicationNo, object userState) {
            if ((this.FnSubmitApplicationOperationCompleted == null)) {
                this.FnSubmitApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitApplicationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitApplication", new object[] {
                        applicationNo}, this.FnSubmitApplicationOperationCompleted, userState);
        }
        
        private void OnFnSubmitApplicationOperationCompleted(object arg) {
            if ((this.FnSubmitApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitApplicationCompleted(this, new FnSubmitApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:RemoveItem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="RemoveItem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveItem(int entryNo, string applicationNo) {
            object[] results = this.Invoke("RemoveItem", new object[] {
                        entryNo,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveItemAsync(int entryNo, string applicationNo) {
            this.RemoveItemAsync(entryNo, applicationNo, null);
        }
        
        /// <remarks/>
        public void RemoveItemAsync(int entryNo, string applicationNo, object userState) {
            if ((this.RemoveItemOperationCompleted == null)) {
                this.RemoveItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveItemOperationCompleted);
            }
            this.InvokeAsync("RemoveItem", new object[] {
                        entryNo,
                        applicationNo}, this.RemoveItemOperationCompleted, userState);
        }
        
        private void OnRemoveItemOperationCompleted(object arg) {
            if ((this.RemoveItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveItemCompleted(this, new RemoveItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:RemoveFacility", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="RemoveFacility_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveFacility(int entryNo, string applicationNo) {
            object[] results = this.Invoke("RemoveFacility", new object[] {
                        entryNo,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFacilityAsync(int entryNo, string applicationNo) {
            this.RemoveFacilityAsync(entryNo, applicationNo, null);
        }
        
        /// <remarks/>
        public void RemoveFacilityAsync(int entryNo, string applicationNo, object userState) {
            if ((this.RemoveFacilityOperationCompleted == null)) {
                this.RemoveFacilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFacilityOperationCompleted);
            }
            this.InvokeAsync("RemoveFacility", new object[] {
                        entryNo,
                        applicationNo}, this.RemoveFacilityOperationCompleted, userState);
        }
        
        private void OnRemoveFacilityOperationCompleted(object arg) {
            if ((this.RemoveFacilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFacilityCompleted(this, new RemoveFacilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:RemoveGovernance", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="RemoveGovernance_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveGovernance(int entryNo, string applicationNo) {
            object[] results = this.Invoke("RemoveGovernance", new object[] {
                        entryNo,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveGovernanceAsync(int entryNo, string applicationNo) {
            this.RemoveGovernanceAsync(entryNo, applicationNo, null);
        }
        
        /// <remarks/>
        public void RemoveGovernanceAsync(int entryNo, string applicationNo, object userState) {
            if ((this.RemoveGovernanceOperationCompleted == null)) {
                this.RemoveGovernanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveGovernanceOperationCompleted);
            }
            this.InvokeAsync("RemoveGovernance", new object[] {
                        entryNo,
                        applicationNo}, this.RemoveGovernanceOperationCompleted, userState);
        }
        
        private void OnRemoveGovernanceOperationCompleted(object arg) {
            if ((this.RemoveGovernanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveGovernanceCompleted(this, new RemoveGovernanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:RemoveStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="RemoveStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveStaff(int entryNo, string applicationNo) {
            object[] results = this.Invoke("RemoveStaff", new object[] {
                        entryNo,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveStaffAsync(int entryNo, string applicationNo) {
            this.RemoveStaffAsync(entryNo, applicationNo, null);
        }
        
        /// <remarks/>
        public void RemoveStaffAsync(int entryNo, string applicationNo, object userState) {
            if ((this.RemoveStaffOperationCompleted == null)) {
                this.RemoveStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveStaffOperationCompleted);
            }
            this.InvokeAsync("RemoveStaff", new object[] {
                        entryNo,
                        applicationNo}, this.RemoveStaffOperationCompleted, userState);
        }
        
        private void OnRemoveStaffOperationCompleted(object arg) {
            if ((this.RemoveStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveStaffCompleted(this, new RemoveStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:RemoveActivity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="RemoveActivity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveActivity(int entryNo, string applicationNo) {
            object[] results = this.Invoke("RemoveActivity", new object[] {
                        entryNo,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveActivityAsync(int entryNo, string applicationNo) {
            this.RemoveActivityAsync(entryNo, applicationNo, null);
        }
        
        /// <remarks/>
        public void RemoveActivityAsync(int entryNo, string applicationNo, object userState) {
            if ((this.RemoveActivityOperationCompleted == null)) {
                this.RemoveActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveActivityOperationCompleted);
            }
            this.InvokeAsync("RemoveActivity", new object[] {
                        entryNo,
                        applicationNo}, this.RemoveActivityOperationCompleted, userState);
        }
        
        private void OnRemoveActivityOperationCompleted(object arg) {
            if ((this.RemoveActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveActivityCompleted(this, new RemoveActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:RemoveUniversity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="RemoveUniversity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveUniversity(int entryNo, string applicationNo) {
            object[] results = this.Invoke("RemoveUniversity", new object[] {
                        entryNo,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUniversityAsync(int entryNo, string applicationNo) {
            this.RemoveUniversityAsync(entryNo, applicationNo, null);
        }
        
        /// <remarks/>
        public void RemoveUniversityAsync(int entryNo, string applicationNo, object userState) {
            if ((this.RemoveUniversityOperationCompleted == null)) {
                this.RemoveUniversityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUniversityOperationCompleted);
            }
            this.InvokeAsync("RemoveUniversity", new object[] {
                        entryNo,
                        applicationNo}, this.RemoveUniversityOperationCompleted, userState);
        }
        
        private void OnRemoveUniversityOperationCompleted(object arg) {
            if ((this.RemoveUniversityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUniversityCompleted(this, new RemoveUniversityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:Removedoc", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="Removedoc_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Removedoc(int entryNo, string applicationNo) {
            object[] results = this.Invoke("Removedoc", new object[] {
                        entryNo,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemovedocAsync(int entryNo, string applicationNo) {
            this.RemovedocAsync(entryNo, applicationNo, null);
        }
        
        /// <remarks/>
        public void RemovedocAsync(int entryNo, string applicationNo, object userState) {
            if ((this.RemovedocOperationCompleted == null)) {
                this.RemovedocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovedocOperationCompleted);
            }
            this.InvokeAsync("Removedoc", new object[] {
                        entryNo,
                        applicationNo}, this.RemovedocOperationCompleted, userState);
        }
        
        private void OnRemovedocOperationCompleted(object arg) {
            if ((this.RemovedocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovedocCompleted(this, new RemovedocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:EditPhysicalLocation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="EditPhysicalLocation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditPhysicalLocation(string tapplicationNo, int tentryNo, string tAddress, string tPhysicalLocation) {
            object[] results = this.Invoke("EditPhysicalLocation", new object[] {
                        tapplicationNo,
                        tentryNo,
                        tAddress,
                        tPhysicalLocation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditPhysicalLocationAsync(string tapplicationNo, int tentryNo, string tAddress, string tPhysicalLocation) {
            this.EditPhysicalLocationAsync(tapplicationNo, tentryNo, tAddress, tPhysicalLocation, null);
        }
        
        /// <remarks/>
        public void EditPhysicalLocationAsync(string tapplicationNo, int tentryNo, string tAddress, string tPhysicalLocation, object userState) {
            if ((this.EditPhysicalLocationOperationCompleted == null)) {
                this.EditPhysicalLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditPhysicalLocationOperationCompleted);
            }
            this.InvokeAsync("EditPhysicalLocation", new object[] {
                        tapplicationNo,
                        tentryNo,
                        tAddress,
                        tPhysicalLocation}, this.EditPhysicalLocationOperationCompleted, userState);
        }
        
        private void OnEditPhysicalLocationOperationCompleted(object arg) {
            if ((this.EditPhysicalLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditPhysicalLocationCompleted(this, new EditPhysicalLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:EditStaffProfile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="EditStaffProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditStaffProfile(string tapplicationNo, int tentryNo, string tname, string rank, string qualification, string areSpecialization, string institution) {
            object[] results = this.Invoke("EditStaffProfile", new object[] {
                        tapplicationNo,
                        tentryNo,
                        tname,
                        rank,
                        qualification,
                        areSpecialization,
                        institution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditStaffProfileAsync(string tapplicationNo, int tentryNo, string tname, string rank, string qualification, string areSpecialization, string institution) {
            this.EditStaffProfileAsync(tapplicationNo, tentryNo, tname, rank, qualification, areSpecialization, institution, null);
        }
        
        /// <remarks/>
        public void EditStaffProfileAsync(string tapplicationNo, int tentryNo, string tname, string rank, string qualification, string areSpecialization, string institution, object userState) {
            if ((this.EditStaffProfileOperationCompleted == null)) {
                this.EditStaffProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditStaffProfileOperationCompleted);
            }
            this.InvokeAsync("EditStaffProfile", new object[] {
                        tapplicationNo,
                        tentryNo,
                        tname,
                        rank,
                        qualification,
                        areSpecialization,
                        institution}, this.EditStaffProfileOperationCompleted, userState);
        }
        
        private void OnEditStaffProfileOperationCompleted(object arg) {
            if ((this.EditStaffProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditStaffProfileCompleted(this, new EditStaffProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:EditGovernanceComplia" +
            "nce", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="EditGovernanceCompliance_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditGovernanceCompliance(string tapplicationNo, int tentryNo, string tAuth, string tCertNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime tIssueDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime tExpiryDate) {
            object[] results = this.Invoke("EditGovernanceCompliance", new object[] {
                        tapplicationNo,
                        tentryNo,
                        tAuth,
                        tCertNo,
                        tIssueDate,
                        tExpiryDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditGovernanceComplianceAsync(string tapplicationNo, int tentryNo, string tAuth, string tCertNo, System.DateTime tIssueDate, System.DateTime tExpiryDate) {
            this.EditGovernanceComplianceAsync(tapplicationNo, tentryNo, tAuth, tCertNo, tIssueDate, tExpiryDate, null);
        }
        
        /// <remarks/>
        public void EditGovernanceComplianceAsync(string tapplicationNo, int tentryNo, string tAuth, string tCertNo, System.DateTime tIssueDate, System.DateTime tExpiryDate, object userState) {
            if ((this.EditGovernanceComplianceOperationCompleted == null)) {
                this.EditGovernanceComplianceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditGovernanceComplianceOperationCompleted);
            }
            this.InvokeAsync("EditGovernanceCompliance", new object[] {
                        tapplicationNo,
                        tentryNo,
                        tAuth,
                        tCertNo,
                        tIssueDate,
                        tExpiryDate}, this.EditGovernanceComplianceOperationCompleted, userState);
        }
        
        private void OnEditGovernanceComplianceOperationCompleted(object arg) {
            if ((this.EditGovernanceComplianceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditGovernanceComplianceCompleted(this, new EditGovernanceComplianceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnConfirmPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnConfirmPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnConfirmPayment(string applicationNo, string paymentRef, string paymentModes, decimal amount, string currency) {
            object[] results = this.Invoke("FnConfirmPayment", new object[] {
                        applicationNo,
                        paymentRef,
                        paymentModes,
                        amount,
                        currency});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnConfirmPaymentAsync(string applicationNo, string paymentRef, string paymentModes, decimal amount, string currency) {
            this.FnConfirmPaymentAsync(applicationNo, paymentRef, paymentModes, amount, currency, null);
        }
        
        /// <remarks/>
        public void FnConfirmPaymentAsync(string applicationNo, string paymentRef, string paymentModes, decimal amount, string currency, object userState) {
            if ((this.FnConfirmPaymentOperationCompleted == null)) {
                this.FnConfirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnConfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("FnConfirmPayment", new object[] {
                        applicationNo,
                        paymentRef,
                        paymentModes,
                        amount,
                        currency}, this.FnConfirmPaymentOperationCompleted, userState);
        }
        
        private void OnFnConfirmPaymentOperationCompleted(object arg) {
            if ((this.FnConfirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnConfirmPaymentCompleted(this, new FnConfirmPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnInsertEquipments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnInsertEquipments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertEquipments(string tapplicationNo, string itemNo, int quantity, string capacity, string type, int shared, int specific) {
            object[] results = this.Invoke("FnInsertEquipments", new object[] {
                        tapplicationNo,
                        itemNo,
                        quantity,
                        capacity,
                        type,
                        shared,
                        specific});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertEquipmentsAsync(string tapplicationNo, string itemNo, int quantity, string capacity, string type, int shared, int specific) {
            this.FnInsertEquipmentsAsync(tapplicationNo, itemNo, quantity, capacity, type, shared, specific, null);
        }
        
        /// <remarks/>
        public void FnInsertEquipmentsAsync(string tapplicationNo, string itemNo, int quantity, string capacity, string type, int shared, int specific, object userState) {
            if ((this.FnInsertEquipmentsOperationCompleted == null)) {
                this.FnInsertEquipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertEquipmentsOperationCompleted);
            }
            this.InvokeAsync("FnInsertEquipments", new object[] {
                        tapplicationNo,
                        itemNo,
                        quantity,
                        capacity,
                        type,
                        shared,
                        specific}, this.FnInsertEquipmentsOperationCompleted, userState);
        }
        
        private void OnFnInsertEquipmentsOperationCompleted(object arg) {
            if ((this.FnInsertEquipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertEquipmentsCompleted(this, new FnInsertEquipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnGenerateApplication" +
            "Report", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnGenerateApplicationReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateApplicationReport(string docNo) {
            object[] results = this.Invoke("FnGenerateApplicationReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateApplicationReportAsync(string docNo) {
            this.FnGenerateApplicationReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateApplicationReportAsync(string docNo, object userState) {
            if ((this.FnGenerateApplicationReportOperationCompleted == null)) {
                this.FnGenerateApplicationReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateApplicationReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateApplicationReport", new object[] {
                        docNo}, this.FnGenerateApplicationReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateApplicationReportOperationCompleted(object arg) {
            if ((this.FnGenerateApplicationReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateApplicationReportCompleted(this, new FnGenerateApplicationReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnUserHelpEmaiRequest" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnUserHelpEmaiRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUserHelpEmaiRequest(string usercode, string password, string email, string useremailsubject, string messagebody) {
            object[] results = this.Invoke("FnUserHelpEmaiRequest", new object[] {
                        usercode,
                        password,
                        email,
                        useremailsubject,
                        messagebody});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUserHelpEmaiRequestAsync(string usercode, string password, string email, string useremailsubject, string messagebody) {
            this.FnUserHelpEmaiRequestAsync(usercode, password, email, useremailsubject, messagebody, null);
        }
        
        /// <remarks/>
        public void FnUserHelpEmaiRequestAsync(string usercode, string password, string email, string useremailsubject, string messagebody, object userState) {
            if ((this.FnUserHelpEmaiRequestOperationCompleted == null)) {
                this.FnUserHelpEmaiRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUserHelpEmaiRequestOperationCompleted);
            }
            this.InvokeAsync("FnUserHelpEmaiRequest", new object[] {
                        usercode,
                        password,
                        email,
                        useremailsubject,
                        messagebody}, this.FnUserHelpEmaiRequestOperationCompleted, userState);
        }
        
        private void OnFnUserHelpEmaiRequestOperationCompleted(object arg) {
            if ((this.FnUserHelpEmaiRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUserHelpEmaiRequestCompleted(this, new FnUserHelpEmaiRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnLicenceVoucher", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnLicenceVoucher_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLicenceVoucher(string licenseNo, string institutionNo) {
            object[] results = this.Invoke("FnLicenceVoucher", new object[] {
                        licenseNo,
                        institutionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLicenceVoucherAsync(string licenseNo, string institutionNo) {
            this.FnLicenceVoucherAsync(licenseNo, institutionNo, null);
        }
        
        /// <remarks/>
        public void FnLicenceVoucherAsync(string licenseNo, string institutionNo, object userState) {
            if ((this.FnLicenceVoucherOperationCompleted == null)) {
                this.FnLicenceVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLicenceVoucherOperationCompleted);
            }
            this.InvokeAsync("FnLicenceVoucher", new object[] {
                        licenseNo,
                        institutionNo}, this.FnLicenceVoucherOperationCompleted, userState);
        }
        
        private void OnFnLicenceVoucherOperationCompleted(object arg) {
            if ((this.FnLicenceVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLicenceVoucherCompleted(this, new FnLicenceVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnInsertRenewalacilit" +
            "ies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnInsertRenewalacilities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertRenewalacilities(string tapplicationNo, string tFacilityCode, int tquantity, string tFacilitycategory, int tAdequacy) {
            object[] results = this.Invoke("FnInsertRenewalacilities", new object[] {
                        tapplicationNo,
                        tFacilityCode,
                        tquantity,
                        tFacilitycategory,
                        tAdequacy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertRenewalacilitiesAsync(string tapplicationNo, string tFacilityCode, int tquantity, string tFacilitycategory, int tAdequacy) {
            this.FnInsertRenewalacilitiesAsync(tapplicationNo, tFacilityCode, tquantity, tFacilitycategory, tAdequacy, null);
        }
        
        /// <remarks/>
        public void FnInsertRenewalacilitiesAsync(string tapplicationNo, string tFacilityCode, int tquantity, string tFacilitycategory, int tAdequacy, object userState) {
            if ((this.FnInsertRenewalacilitiesOperationCompleted == null)) {
                this.FnInsertRenewalacilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertRenewalacilitiesOperationCompleted);
            }
            this.InvokeAsync("FnInsertRenewalacilities", new object[] {
                        tapplicationNo,
                        tFacilityCode,
                        tquantity,
                        tFacilitycategory,
                        tAdequacy}, this.FnInsertRenewalacilitiesOperationCompleted, userState);
        }
        
        private void OnFnInsertRenewalacilitiesOperationCompleted(object arg) {
            if ((this.FnInsertRenewalacilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertRenewalacilitiesCompleted(this, new FnInsertRenewalacilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnInsertStudentStatis" +
            "tics", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnInsertStudentStatistics_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStudentStatistics(string tapplicationNo, int tcoursetype, string coursename, int malenumber, int femalenumber, string county, int totals) {
            object[] results = this.Invoke("FnInsertStudentStatistics", new object[] {
                        tapplicationNo,
                        tcoursetype,
                        coursename,
                        malenumber,
                        femalenumber,
                        county,
                        totals});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStudentStatisticsAsync(string tapplicationNo, int tcoursetype, string coursename, int malenumber, int femalenumber, string county, int totals) {
            this.FnInsertStudentStatisticsAsync(tapplicationNo, tcoursetype, coursename, malenumber, femalenumber, county, totals, null);
        }
        
        /// <remarks/>
        public void FnInsertStudentStatisticsAsync(string tapplicationNo, int tcoursetype, string coursename, int malenumber, int femalenumber, string county, int totals, object userState) {
            if ((this.FnInsertStudentStatisticsOperationCompleted == null)) {
                this.FnInsertStudentStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStudentStatisticsOperationCompleted);
            }
            this.InvokeAsync("FnInsertStudentStatistics", new object[] {
                        tapplicationNo,
                        tcoursetype,
                        coursename,
                        malenumber,
                        femalenumber,
                        county,
                        totals}, this.FnInsertStudentStatisticsOperationCompleted, userState);
        }
        
        private void OnFnInsertStudentStatisticsOperationCompleted(object arg) {
            if ((this.FnInsertStudentStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStudentStatisticsCompleted(this, new FnInsertStudentStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnInsertUniversity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnInsertUniversity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertUniversity(string tapplicationNo, string country, bool tCHARTER, bool tMOU, bool tMOA, bool tMOF, string universityName) {
            object[] results = this.Invoke("FnInsertUniversity", new object[] {
                        tapplicationNo,
                        country,
                        tCHARTER,
                        tMOU,
                        tMOA,
                        tMOF,
                        universityName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertUniversityAsync(string tapplicationNo, string country, bool tCHARTER, bool tMOU, bool tMOA, bool tMOF, string universityName) {
            this.FnInsertUniversityAsync(tapplicationNo, country, tCHARTER, tMOU, tMOA, tMOF, universityName, null);
        }
        
        /// <remarks/>
        public void FnInsertUniversityAsync(string tapplicationNo, string country, bool tCHARTER, bool tMOU, bool tMOA, bool tMOF, string universityName, object userState) {
            if ((this.FnInsertUniversityOperationCompleted == null)) {
                this.FnInsertUniversityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertUniversityOperationCompleted);
            }
            this.InvokeAsync("FnInsertUniversity", new object[] {
                        tapplicationNo,
                        country,
                        tCHARTER,
                        tMOU,
                        tMOA,
                        tMOF,
                        universityName}, this.FnInsertUniversityOperationCompleted, userState);
        }
        
        private void OnFnInsertUniversityOperationCompleted(object arg) {
            if ((this.FnInsertUniversityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertUniversityCompleted(this, new FnInsertUniversityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnSubmitAppealReason", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnSubmitAppealReason_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitAppealReason(string institutionNo, string appealReason) {
            object[] results = this.Invoke("FnSubmitAppealReason", new object[] {
                        institutionNo,
                        appealReason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitAppealReasonAsync(string institutionNo, string appealReason) {
            this.FnSubmitAppealReasonAsync(institutionNo, appealReason, null);
        }
        
        /// <remarks/>
        public void FnSubmitAppealReasonAsync(string institutionNo, string appealReason, object userState) {
            if ((this.FnSubmitAppealReasonOperationCompleted == null)) {
                this.FnSubmitAppealReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitAppealReasonOperationCompleted);
            }
            this.InvokeAsync("FnSubmitAppealReason", new object[] {
                        institutionNo,
                        appealReason}, this.FnSubmitAppealReasonOperationCompleted, userState);
        }
        
        private void OnFnSubmitAppealReasonOperationCompleted(object arg) {
            if ((this.FnSubmitAppealReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitAppealReasonCompleted(this, new FnSubmitAppealReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnGenerateLicenseRepo" +
            "rt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnGenerateLicenseReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateLicenseReport(string docNo) {
            object[] results = this.Invoke("FnGenerateLicenseReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateLicenseReportAsync(string docNo) {
            this.FnGenerateLicenseReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateLicenseReportAsync(string docNo, object userState) {
            if ((this.FnGenerateLicenseReportOperationCompleted == null)) {
                this.FnGenerateLicenseReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateLicenseReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateLicenseReport", new object[] {
                        docNo}, this.FnGenerateLicenseReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateLicenseReportOperationCompleted(object arg) {
            if ((this.FnGenerateLicenseReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateLicenseReportCompleted(this, new FnGenerateLicenseReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal:FnGenerateProformaRep" +
            "ort", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", ResponseElementName="FnGenerateProformaReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CollaborationPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateProformaReport(string docNo) {
            object[] results = this.Invoke("FnGenerateProformaReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateProformaReportAsync(string docNo) {
            this.FnGenerateProformaReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateProformaReportAsync(string docNo, object userState) {
            if ((this.FnGenerateProformaReportOperationCompleted == null)) {
                this.FnGenerateProformaReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateProformaReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateProformaReport", new object[] {
                        docNo}, this.FnGenerateProformaReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateProformaReportOperationCompleted(object arg) {
            if ((this.FnGenerateProformaReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateProformaReportCompleted(this, new FnGenerateProformaReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRegistrationCompletedEventHandler(object sender, FnRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnResetPasswordCompletedEventHandler(object sender, FnResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PortalResetPasswordCompletedEventHandler(object sender, PortalResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PortalResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PortalResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCollabApplicationHeaderCompletedEventHandler(object sender, FnCollabApplicationHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCollabApplicationHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCollabApplicationHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnForeignDetailsCompletedEventHandler(object sender, FnForeignDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnForeignDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnForeignDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertCoreTextJournalsCompletedEventHandler(object sender, FnInsertCoreTextJournalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertCoreTextJournalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertCoreTextJournalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertSourceOfFundsCompletedEventHandler(object sender, FnInsertSourceOfFundsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertSourceOfFundsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertSourceOfFundsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertAgentFacilitiesCompletedEventHandler(object sender, FnInsertAgentFacilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertAgentFacilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertAgentFacilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertGovernmentComplianceCompletedEventHandler(object sender, FnInsertGovernmentComplianceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertGovernmentComplianceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertGovernmentComplianceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertStaffMemberCompletedEventHandler(object sender, FnInsertStaffMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStaffMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStaffMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnProgrammeDetailsCompletedEventHandler(object sender, FnProgrammeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnProgrammeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnProgrammeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertResponseCompletedEventHandler(object sender, FnInsertResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddDocumentsLinksCompletedEventHandler(object sender, FnAddDocumentsLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddDocumentsLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddDocumentsLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitApplicationCompletedEventHandler(object sender, FnSubmitApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveItemCompletedEventHandler(object sender, RemoveItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveFacilityCompletedEventHandler(object sender, RemoveFacilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFacilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFacilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveGovernanceCompletedEventHandler(object sender, RemoveGovernanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveGovernanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveGovernanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveStaffCompletedEventHandler(object sender, RemoveStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveActivityCompletedEventHandler(object sender, RemoveActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveUniversityCompletedEventHandler(object sender, RemoveUniversityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUniversityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUniversityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemovedocCompletedEventHandler(object sender, RemovedocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemovedocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemovedocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditPhysicalLocationCompletedEventHandler(object sender, EditPhysicalLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditPhysicalLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditPhysicalLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditStaffProfileCompletedEventHandler(object sender, EditStaffProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditStaffProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditStaffProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditGovernanceComplianceCompletedEventHandler(object sender, EditGovernanceComplianceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditGovernanceComplianceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditGovernanceComplianceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnConfirmPaymentCompletedEventHandler(object sender, FnConfirmPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnConfirmPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnConfirmPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertEquipmentsCompletedEventHandler(object sender, FnInsertEquipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertEquipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertEquipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateApplicationReportCompletedEventHandler(object sender, FnGenerateApplicationReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateApplicationReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateApplicationReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUserHelpEmaiRequestCompletedEventHandler(object sender, FnUserHelpEmaiRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUserHelpEmaiRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUserHelpEmaiRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnLicenceVoucherCompletedEventHandler(object sender, FnLicenceVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLicenceVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLicenceVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertRenewalacilitiesCompletedEventHandler(object sender, FnInsertRenewalacilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertRenewalacilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertRenewalacilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertStudentStatisticsCompletedEventHandler(object sender, FnInsertStudentStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStudentStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStudentStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertUniversityCompletedEventHandler(object sender, FnInsertUniversityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertUniversityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertUniversityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitAppealReasonCompletedEventHandler(object sender, FnSubmitAppealReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitAppealReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitAppealReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateLicenseReportCompletedEventHandler(object sender, FnGenerateLicenseReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateLicenseReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateLicenseReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateProformaReportCompletedEventHandler(object sender, FnGenerateProformaReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateProformaReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateProformaReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591